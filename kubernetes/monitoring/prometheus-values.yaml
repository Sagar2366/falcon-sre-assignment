# Prometheus Helm Values
# Production-ready configuration for Prometheus

# Global configuration
global:
  scrape_interval: 15s
  evaluation_interval: 15s

# Prometheus Server Configuration
server:
  replicas: 2
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  retention: 15d
  storageSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: gp3
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi
  ingress:
    enabled: true
    ingressClassName: nginx
        hosts:
      - host: prometheus.sre-assessment.local
        paths:
          - path: /
            pathType: Prefix
  tls:
    - secretName: prometheus-tls
      hosts:
        - prometheus.sre-assessment.local
  service:
    type: ClusterIP
    port: 9090

# Alertmanager Configuration
alertmanager:
  enabled: true
  replicas: 2
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: gp3
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
  ingress:
    enabled: true
    ingressClassName: nginx
        hosts:
      - host: alertmanager.sre-assessment.local
        paths:
          - path: /
            pathType: Prefix
  tls:
    - secretName: alertmanager-tls
      hosts:
        - alertmanager.sre-assessment.local

# Grafana Configuration
grafana:
  enabled: true
  replicas: 2
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  adminPassword: "grafana-admin-password"
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: gp3
  ingress:
    enabled: true
    ingressClassName: nginx
        hosts:
      - host: grafana.sre-assessment.local
        paths:
          - path: /
            pathType: Prefix
  tls:
    - secretName: grafana-tls
      hosts:
        - grafana.sre-assessment.local
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      kubernetes-cluster:
        gnetId: 7249
        revision: 1
        datasource: Prometheus
      kubernetes-pods:
        gnetId: 6417
        revision: 1
        datasource: Prometheus
      argocd:
        gnetId: 14584
        revision: 1
        datasource: Prometheus

# Node Exporter
nodeExporter:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Kube State Metrics
kubeStateMetrics:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Pushgateway
pushgateway:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Service Monitor for ArgoCD
serviceMonitor:
  enabled: true
  interval: 30s

# Additional Scrape Configs
additionalScrapeConfigs:
  - job_name: 'argocd-metrics'
    static_configs:
      - targets: ['argocd-server.argocd.svc.cluster.local:8080']
    metrics_path: /metrics
    scheme: https
    tls_config:
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token 